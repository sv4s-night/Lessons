""" Задача Режимы доступа"""


from src.Lesson_14_2.oop.task import Task
from src.Lesson_14_2.oop.user import User


"""
1. Для класса User сделайте список задач приватным атрибутом,
чтобы к нему нельзя было получить доступ вне класса

2. Добавьте геттер для приватного атрибута списка задач.
Геттер должен возвращать данные о каждой задаче в списке в формате:
- Назначение задачи, Статус выполнения: Ожидает старта, Дата создания 01.04.2024

3. Для добавления задач пользователю реализуйте отдельный метод (сеттер) в классе User,
При этом не забудьте увеличить счетчик задач всех пользователей

4. Для класса Task реализуйте класс-метод, который будет принимать на вход параметры
задач и возвращать созданный объект класса Task

5. Для класса Task сделайте атрибут даты создания приватным и опишите геттеры и
сеттеры. В сеттеры реализуйте проверку: в случае если дата создания раньше, чем 
сегодняшняя, выводите сообщение в консоль "Нельзя изменить дату создания на дату из 
прошлого", при этом новую дату устанавливать не нужно.

6. Напишите тесты на новый функционал
"""


if __name__ == "__main__":
    task = Task("купить огурцы", "купить огурцы для салата")
    task2 = Task("купить помидоры", "Купить помидоры для салата")  # создаем дополнительные задачи для task_list
    task3 = Task("купить лук", "Купить лук для салата")
    task4 = Task("купить горошек", "Купить горошек для салата")
    task5 = Task("купить перец", "Купить перец для салата")
    #
    # # создаем User
    user = User("Ivan", "Ivan.Ivanov@email.com", "Ivan", "Ivanov", [task, task2, task3, task4, task5])
    #
    # print(user.username)            # Ivan
    # print(user.email)               # Ivan.Ivanov@email.com
    # print(user.first_name)          # Ivan
    # print(user.last_name)           # Ivanov
    # print(user.task_list)
    #
    # print(user.users_count)         # 1
    # print(user.all_tasks_count)     # 5

    task6 = Task("купить помидоры", "Купить помидоры для салата")  # создаем дополнительные задачи для task_list
    user.task_list = task6  # идет обращение к сеттеру, который добавляет новое значение

    print(user.task_list)
    print(User.all_tasks_count)


    task2 = Task.new_task("Купить билеты", "Купить билеты на самолет")
    print(task2.name)
    print(task2.description)
    print(task2.status)
    print(task2.created_at)

    # проверка сеттера TAsk
    task2.created_at = "29.08.2024"

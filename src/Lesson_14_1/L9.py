""" Задачи Введение в ООП"""

"""
1. Создайте класс Task который будет определять задачу. Для класса Task определите
след свойства:

* Название
* Описание
* Статус
* Дата создания в формате DD.MM.YYYY
    
    Для класса добавьте инициализацию так, чтобы каждый параметр был передан при
    создании объекта и сохранен. При этом если не передан Статус значение автоматически
    выставляется в Ожидает старта, а если не указана дата - автоматически проставляется текущая дата
    
2. Создайте класс User который будет определять каждого пользователя системы. Для класса User определите 
следующие свойства:

* Имя пользователя
* Email
* Имя
* Фамилия
* Список уникальных задач
    
    Для класса добавьте инициализацию так. чтобы каждый параметр был передан при создании объекта и сохранен
    
3. Для класса User добавьте два атрибута класса. Эти атрибуты хранят в себе количество
пользователей в системе и количество задач всех пользователей

4. Напишите тесты для классов, которые проверятЖ

* Корректность инициализации объектов класса User
* Корректность инициализации объектов класса Task
* подсчет количества пользователей
* подсчет количества задач всех пользователей

5. Реализуйте функцию для загрузки данных о пользователях и задачах из json файла

"""


import datetime


class Task:
    name: str
    descriptions: str
    status: str
    created_at: str

    def __init__(self, name, descriptions, status="Ожидает старта", created_at=None):
                                                                    # self - ссылка на экземпляр класса
        self.name = name
        self.descriptions = descriptions                            # descriptions - описание
        self.status = status
        self.created_at = created_at if created_at else datetime.date.today().strftime("%d.%m.%Y")
        # created_at - дата создания (применяем библиотеку datetime) .strtime() - переводит из даты в строку
                                                                    # .date.today() - подставляет сегодняшную дату






if __name__ == "__main__":



